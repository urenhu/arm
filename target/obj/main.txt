; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\cmsis -I..\main -I..\usr_lib -I..\ctt -I..\sensor -I..\free_rtos -I..\STM32F10x_StdPeriph -I..\STM32F10x_StdPeriph\inc -IC:\project\diy-project\stm32fxx\stm32_glcd_base\target\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\main.crf ..\main\main.c]
                          THUMB

                          AREA ||i.USART1OUT||, CODE, READONLY, ALIGN=2

                  USART1OUT PROC
;;;49     
;;;50     void USART1OUT( void *pvParameters )
000000  4d04              LDR      r5,|L1.20|
;;;51     {
;;;52     	static char str[100];
;;;53     	volatile unsigned long ul;
;;;54     	for( ;; )	{
;;;55     		//while( xQueueReceive( USART1_MSGQ, str, portMAX_DELAY ) != pdPASS );
;;;56     		xQueueReceive( USART1_MSGQ, str, portMAX_DELAY );
000002  f04f34ff          MOV      r4,#0xffffffff
                  |L1.6|
000006  2300              MOVS     r3,#0
000008  4622              MOV      r2,r4
00000a  4903              LDR      r1,|L1.24|
00000c  6868              LDR      r0,[r5,#4]  ; USART1_MSGQ
00000e  f7fffffe          BL       xQueueGenericReceive
000012  e7f8              B        |L1.6|
;;;57     		// printf("%s",str);
;;;58     	}
;;;59     }
;;;60     
                          ENDP

                  |L1.20|
                          DCD      ||.data||
                  |L1.24|
                          DCD      ||.bss||

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;79     **/
;;;80     int main(void)
000000  b57f              PUSH     {r0-r6,lr}
;;;81      {		
;;;82     	int data; 
;;;83     
;;;84     	NVIC_Configuration();
000002  f7fffffe          BL       NVIC_Configuration
;;;85     
;;;86     	delay_init();
000006  f7fffffe          BL       delay_init
;;;87     	usrrtc_init(); 
00000a  f7fffffe          BL       usrrtc_init
;;;88     	usart_init(115200);	 
00000e  f44f30e1          MOV      r0,#0x1c200
000012  f7fffffe          BL       usart_init
;;;89      
;;;90       usrled_init();
000016  f7fffffe          BL       usrled_init
;;;91     	//usrkey_init();
;;;92      	TIM2_Int_Init(4999,3599);   // 1000ms  
00001a  f640610f          MOV      r1,#0xe0f
00001e  f2413087          MOV      r0,#0x1387
000022  f7fffffe          BL       TIM2_Int_Init
;;;93      	//TIM3_PWM_Init(899,0);       // F_pwm = 8khz  72M = 900, out PB5
;;;94     	usradc_init ();             // ADC on chip Temp sensor  
000026  f7fffffe          BL       usradc_init
;;;95     	usrtadc_init ();		   		  // ADC PA5
00002a  f7fffffe          BL       usrtadc_init
;;;96     	//usr_fram_init();
;;;97     	//usr_ad9850_init();
;;;98       
;;;99     	 printf ("welcom tom wu!\r\n");
00002e  a025              ADR      r0,|L2.196|
000030  f7fffffe          BL       __2printf
;;;100    	
;;;101    	//data =   usart_hitkey();  
;;;102    	if (data == 'a' ){
000034  2c61              CMP      r4,#0x61
000036  d102              BNE      |L2.62|
;;;103    	printf ("welcom tom wu!\r\n");
000038  a022              ADR      r0,|L2.196|
00003a  f7fffffe          BL       __2printf
                  |L2.62|
;;;104    	}
;;;105     	//st7066_init();
;;;106      //st7066_puts(0,0,"help mt, tom."); 
;;;107    	
;;;108    	USART1_MSGQ = xQueueCreate ( 10, (sizeof(char))*100 );
00003e  2200              MOVS     r2,#0
000040  2164              MOVS     r1,#0x64
000042  200a              MOVS     r0,#0xa
000044  f7fffffe          BL       xQueueGenericCreate
000048  4923              LDR      r1,|L2.216|
;;;109    	
;;;110    	xTaskCreate ( vTask1,    "Task1",     100,  NULL, 2, NULL );
00004a  2400              MOVS     r4,#0
00004c  2502              MOVS     r5,#2
00004e  6048              STR      r0,[r1,#4]  ; USART1_MSGQ
000050  e9cd5400          STRD     r5,r4,[sp,#0]
000054  9402              STR      r4,[sp,#8]
000056  4623              MOV      r3,r4
000058  2264              MOVS     r2,#0x64
00005a  a120              ADR      r1,|L2.220|
00005c  4821              LDR      r0,|L2.228|
00005e  9403              STR      r4,[sp,#0xc]
000060  f7fffffe          BL       xTaskGenericCreate
000064  e9cd5400          STRD     r5,r4,[sp,#0]
;;;111    	xTaskCreate ( vTask2,    "Task2",     100,  NULL, 2, NULL );
000068  9402              STR      r4,[sp,#8]
00006a  2300              MOVS     r3,#0
00006c  2264              MOVS     r2,#0x64
00006e  a11e              ADR      r1,|L2.232|
000070  481f              LDR      r0,|L2.240|
000072  9403              STR      r4,[sp,#0xc]
000074  f7fffffe          BL       xTaskGenericCreate
000078  e9cd5400          STRD     r5,r4,[sp,#0]
;;;112    	xTaskCreate ( vTask3,    "Task3",     100,  NULL, 2, NULL );
00007c  9402              STR      r4,[sp,#8]
00007e  2300              MOVS     r3,#0
000080  2264              MOVS     r2,#0x64
000082  a11c              ADR      r1,|L2.244|
000084  481d              LDR      r0,|L2.252|
000086  9403              STR      r4,[sp,#0xc]
000088  f7fffffe          BL       xTaskGenericCreate
;;;113    	xTaskCreate ( USART1OUT, "USART1OUT", 100,  NULL, 3, NULL );
00008c  2003              MOVS     r0,#3
00008e  e9cd0400          STRD     r0,r4,[sp,#0]
000092  9402              STR      r4,[sp,#8]
000094  2300              MOVS     r3,#0
000096  2264              MOVS     r2,#0x64
000098  a119              ADR      r1,|L2.256|
00009a  481c              LDR      r0,|L2.268|
00009c  9403              STR      r4,[sp,#0xc]
00009e  f7fffffe          BL       xTaskGenericCreate
;;;114    	xTaskCreate ( vTaskIdle, "idle",      500, NULL, 4, NULL );
0000a2  2004              MOVS     r0,#4
0000a4  e9cd0400          STRD     r0,r4,[sp,#0]
0000a8  9402              STR      r4,[sp,#8]
0000aa  2300              MOVS     r3,#0
0000ac  f44f72fa          MOV      r2,#0x1f4
0000b0  a117              ADR      r1,|L2.272|
0000b2  4819              LDR      r0,|L2.280|
0000b4  9403              STR      r4,[sp,#0xc]
0000b6  f7fffffe          BL       xTaskGenericCreate
;;;115    
;;;116    	vTaskStartScheduler();
0000ba  f7fffffe          BL       vTaskStartScheduler
;;;117    	// never hit 
;;;118    }
0000be  b004              ADD      sp,sp,#0x10
0000c0  2000              MOVS     r0,#0
0000c2  bd70              POP      {r4-r6,pc}
;;;119    
                          ENDP

                  |L2.196|
0000c4  77656c63          DCB      "welcom tom wu!\r\n",0
0000c8  6f6d2074
0000cc  6f6d2077
0000d0  75210d0a
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L2.216|
                          DCD      ||.data||
                  |L2.220|
0000dc  5461736b          DCB      "Task1",0
0000e0  3100    
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L2.228|
                          DCD      vTask1
                  |L2.232|
0000e8  5461736b          DCB      "Task2",0
0000ec  3200    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L2.240|
                          DCD      vTask2
                  |L2.244|
0000f4  5461736b          DCB      "Task3",0
0000f8  3300    
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L2.252|
                          DCD      vTask3
                  |L2.256|
000100  55534152          DCB      "USART1OUT",0
000104  54314f55
000108  5400    
00010a  00                DCB      0
00010b  00                DCB      0
                  |L2.268|
                          DCD      USART1OUT
                  |L2.272|
000110  69646c65          DCB      "idle",0
000114  00      
000115  00                DCB      0
000116  00                DCB      0
000117  00                DCB      0
                  |L2.280|
                          DCD      vTaskIdle

                          AREA ||i.vTask1||, CODE, READONLY, ALIGN=2

                  vTask1 PROC
;;;31     
;;;32     void vTask1( void *pvParameters )
000000  b508              PUSH     {r3,lr}
;;;33     {
000002  2500              MOVS     r5,#0
;;;34     	volatile unsigned long   ul;
;;;35     	for( ;; ){	//	xSemaphoreTake( xBinarySemaphore, portMAX_DELAY );
;;;36     		xQueueSend( USART1_MSGQ, "This is task 1 !\n",portMAX_DELAY);
000004  4c08              LDR      r4,|L3.40|
000006  1e6e              SUBS     r6,r5,#1
                  |L3.8|
000008  2300              MOVS     r3,#0
00000a  4632              MOV      r2,r6
00000c  a107              ADR      r1,|L3.44|
00000e  6860              LDR      r0,[r4,#4]  ; USART1_MSGQ
000010  f7fffffe          BL       xQueueGenericSend
;;;37     		for( ul = 0; ul < mainDELAY_LOOP_COUNT; ul++ );
000014  4628              MOV      r0,r5
000016  9500              STR      r5,[sp,#0]
000018  e001              B        |L3.30|
                  |L3.26|
00001a  1c40              ADDS     r0,r0,#1
00001c  9000              STR      r0,[sp,#0]
                  |L3.30|
00001e  6821              LDR      r1,[r4,#0]  ; mainDELAY_LOOP_COUNT
000020  4288              CMP      r0,r1
000022  d2f1              BCS      |L3.8|
000024  e7f9              B        |L3.26|
;;;38     	}
;;;39     }
;;;40     void vTask2( void *pvParameters )
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      ||.data||
                  |L3.44|
00002c  54686973          DCB      "This is task 1 !\n",0
000030  20697320
000034  7461736b
000038  20312021
00003c  0a00    
00003e  00                DCB      0
00003f  00                DCB      0

                          AREA ||i.vTask2||, CODE, READONLY, ALIGN=2

                  vTask2 PROC
;;;39     }
;;;40     void vTask2( void *pvParameters )
000000  b508              PUSH     {r3,lr}
;;;41     {
000002  2500              MOVS     r5,#0
;;;42     	volatile unsigned long ul;
;;;43     	for( ;; ){
;;;44     		xQueueSend( USART1_MSGQ, "This is task 2 !\n",portMAX_DELAY);
000004  4c08              LDR      r4,|L4.40|
000006  1e6e              SUBS     r6,r5,#1
                  |L4.8|
000008  2300              MOVS     r3,#0
00000a  4632              MOV      r2,r6
00000c  a107              ADR      r1,|L4.44|
00000e  6860              LDR      r0,[r4,#4]  ; USART1_MSGQ
000010  f7fffffe          BL       xQueueGenericSend
;;;45     		for( ul = 0; ul < mainDELAY_LOOP_COUNT; ul++ );
000014  4628              MOV      r0,r5
000016  9500              STR      r5,[sp,#0]
000018  e001              B        |L4.30|
                  |L4.26|
00001a  1c40              ADDS     r0,r0,#1
00001c  9000              STR      r0,[sp,#0]
                  |L4.30|
00001e  6821              LDR      r1,[r4,#0]  ; mainDELAY_LOOP_COUNT
000020  4288              CMP      r0,r1
000022  d2f1              BCS      |L4.8|
000024  e7f9              B        |L4.26|
;;;46     	}
;;;47     }
;;;48     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      ||.data||
                  |L4.44|
00002c  54686973          DCB      "This is task 2 !\n",0
000030  20697320
000034  7461736b
000038  20322021
00003c  0a00    
00003e  00                DCB      0
00003f  00                DCB      0

                          AREA ||i.vTask3||, CODE, READONLY, ALIGN=2

                  vTask3 PROC
;;;60     
;;;61     void vTask3( void *pvParameters )
000000  b508              PUSH     {r3,lr}
;;;62     {
000002  2500              MOVS     r5,#0
;;;63     	volatile unsigned long ul;
;;;64     	for( ;; ){
;;;65     		xQueueSend( USART1_MSGQ, "This is task 3 !\n",portMAX_DELAY);
000004  4c08              LDR      r4,|L5.40|
000006  1e6e              SUBS     r6,r5,#1
                  |L5.8|
000008  2300              MOVS     r3,#0
00000a  4632              MOV      r2,r6
00000c  a107              ADR      r1,|L5.44|
00000e  6860              LDR      r0,[r4,#4]  ; USART1_MSGQ
000010  f7fffffe          BL       xQueueGenericSend
;;;66     		for( ul = 0; ul < mainDELAY_LOOP_COUNT; ul++ );
000014  4628              MOV      r0,r5
000016  9500              STR      r5,[sp,#0]
000018  e001              B        |L5.30|
                  |L5.26|
00001a  1c40              ADDS     r0,r0,#1
00001c  9000              STR      r0,[sp,#0]
                  |L5.30|
00001e  6821              LDR      r1,[r4,#0]  ; mainDELAY_LOOP_COUNT
000020  4288              CMP      r0,r1
000022  d2f1              BCS      |L5.8|
000024  e7f9              B        |L5.26|
;;;67     	}
;;;68     }
;;;69     
                          ENDP

000026  0000              DCW      0x0000
                  |L5.40|
                          DCD      ||.data||
                  |L5.44|
00002c  54686973          DCB      "This is task 3 !\n",0
000030  20697320
000034  7461736b
000038  20332021
00003c  0a00    
00003e  00                DCB      0
00003f  00                DCB      0

                          AREA ||i.vTaskIdle||, CODE, READONLY, ALIGN=1

                  vTaskIdle PROC
;;;69     
;;;70     void vTaskIdle( void *pvParameters )
000000  f7ffbffe          B.W      console_main
;;;71     {
;;;72     	  console_main();
;;;73     }
;;;74     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  ||str||
                          %        100

                          AREA ||.data||, DATA, ALIGN=2

                  mainDELAY_LOOP_COUNT
                          DCD      0x0000ffff
                  USART1_MSGQ
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
