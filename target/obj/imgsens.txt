; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\imgsens.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\imgsens.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\cmsis -I..\main -I..\usr_lib -I..\ctt -I..\sensor -I..\free_rtos -I..\STM32F10x_StdPeriph -I..\STM32F10x_StdPeriph\inc -IC:\project\diy-project\stm32fxx\stm32_glcd_base\target\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\imgsens.crf ..\ctt\imgsens.c]
                          THUMB

                          AREA ||i.cap||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  ||cap|| PROC
;;;71     
;;;72     static int cap()
000000  b570              PUSH     {r4-r6,lr}
;;;73     {
;;;74         int ret = CMD_RC_SUCCESS;
000002  2600              MOVS     r6,#0
000004  b0c0              SUB      sp,sp,#0x100          ;73
;;;75     	  int k   = 0;
000006  4631              MOV      r1,r6
000008  4630              MOV      r0,r6
;;;76         char  buf[255];   
00000a  466d              MOV      r5,sp
                  |L1.12|
;;;77     
;;;78     	  for (k=0; k<255; k++){
;;;79     		    buf[k] = 0;
00000c  5468              STRB     r0,[r5,r1]
00000e  1c49              ADDS     r1,r1,#1
000010  29ff              CMP      r1,#0xff              ;78
000012  dbfb              BLT      |L1.12|
;;;80     		}
;;;81         
;;;82     		adns5020_pixels (buf); 
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       adns5020_pixels
;;;83     
;;;84         printf ("\r\nADNS5020 : cap! ! \r\n");
00001a  a00a              ADR      r0,|L1.68|
00001c  f7fffffe          BL       __2printf
;;;85         printf ("\r\n ====== start ========= \r\n");
000020  a00e              ADR      r0,|L1.92|
000022  f7fffffe          BL       __2printf
;;;86     	  for (k=0; k<255; k++){
000026  2400              MOVS     r4,#0
                  |L1.40|
;;;87     		    printf ("%02x ", buf[k] );
000028  a014              ADR      r0,|L1.124|
00002a  5d29              LDRB     r1,[r5,r4]
00002c  f7fffffe          BL       __2printf
000030  1c64              ADDS     r4,r4,#1
000032  2cff              CMP      r4,#0xff              ;86
000034  dbf8              BLT      |L1.40|
;;;88     		}
;;;89         printf ("\r\n ====== end   ========= \r\n");
000036  a013              ADR      r0,|L1.132|
000038  f7fffffe          BL       __2printf
;;;90     	  
;;;91         return ret;
;;;92     }
00003c  b040              ADD      sp,sp,#0x100
00003e  4630              MOV      r0,r6                 ;91
000040  bd70              POP      {r4-r6,pc}
;;;93     
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
000044  0d0a4144          DCB      "\r\nADNS5020 : cap! ! \r\n",0
000048  4e533530
00004c  3230203a
000050  20636170
000054  21202120
000058  0d0a00  
00005b  00                DCB      0
                  |L1.92|
00005c  0d0a203d          DCB      "\r\n ====== start ========= \r\n",0
000060  3d3d3d3d
000064  3d207374
000068  61727420
00006c  3d3d3d3d
000070  3d3d3d3d
000074  3d200d0a
000078  00      
000079  00                DCB      0
00007a  00                DCB      0
00007b  00                DCB      0
                  |L1.124|
00007c  25303278          DCB      "%02x ",0
000080  2000    
000082  00                DCB      0
000083  00                DCB      0
                  |L1.132|
000084  0d0a203d          DCB      "\r\n ====== end   ========= \r\n",0
000088  3d3d3d3d
00008c  3d20656e
000090  64202020
000094  3d3d3d3d
000098  3d3d3d3d
00009c  3d200d0a
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0

                          AREA ||i.init||, CODE, READONLY, ALIGN=2

                  init PROC
;;;36     *****************************************************************************/
;;;37     static int init()
000000  b510              PUSH     {r4,lr}
;;;38     {
;;;39         int ret = CMD_RC_SUCCESS;
000002  2400              MOVS     r4,#0
;;;40     	
;;;41     
;;;42         adns5020_init ();
000004  f7fffffe          BL       adns5020_init
;;;43         adns5020_reset();
000008  f7fffffe          BL       adns5020_reset
;;;44         //adns5020_config();
;;;45         //adns5020_dx();
;;;46         //adns5020_dy();
;;;47         //adns5020_squal();
;;;48         //adns5020_pixels(u8 *buffer); 
;;;49     
;;;50     
;;;51         printf ("\r\nADN5020 : initialized ! \r\n");
00000c  a002              ADR      r0,|L2.24|
00000e  f7fffffe          BL       __2printf
;;;52         
;;;53         return ret;
000012  4620              MOV      r0,r4
;;;54     }
000014  bd10              POP      {r4,pc}
;;;55     
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
000018  0d0a4144          DCB      "\r\nADN5020 : initialized ! \r\n",0
00001c  4e353032
000020  30203a20
000024  696e6974
000028  69616c69
00002c  7a656420
000030  21200d0a
000034  00      
000035  00                DCB      0
000036  00                DCB      0
000037  00                DCB      0

                          AREA ||i.rreg||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  rreg PROC
;;;55     
;;;56     static int rreg (const char *regAdrStr)
000000  b538              PUSH     {r3-r5,lr}
;;;57     {
;;;58         int ret = CMD_RC_SUCCESS;
;;;59     	  int regadr = 0;
000002  2400              MOVS     r4,#0
;;;60     	  u8  regdata = 0;
;;;61     	
;;;62     	  sscanf (regAdrStr, "0x%x", &regadr);
000004  466a              MOV      r2,sp
000006  a108              ADR      r1,|L3.40|
000008  9400              STR      r4,[sp,#0]
00000a  f7fffffe          BL       __0sscanf
;;;63     	  regadr &= 0xff;
00000e  9800              LDR      r0,[sp,#0]
000010  b2c0              UXTB     r0,r0
;;;64         regdata = adns5020_reg_read(regadr ); 
000012  9000              STR      r0,[sp,#0]
000014  f7fffffe          BL       adns5020_reg_read
000018  4602              MOV      r2,r0
;;;65     
;;;66         printf ("\r\n ADN5020:REG[0x%x]=0x%x \r\n", regadr,regdata );
00001a  a005              ADR      r0,|L3.48|
00001c  9900              LDR      r1,[sp,#0]
00001e  f7fffffe          BL       __2printf
;;;67         
;;;68         return ret;
000022  4620              MOV      r0,r4
;;;69     }
000024  bd38              POP      {r3-r5,pc}
;;;70     
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
000028  30782578          DCB      "0x%x",0
00002c  00      
00002d  00                DCB      0
00002e  00                DCB      0
00002f  00                DCB      0
                  |L3.48|
000030  0d0a2041          DCB      "\r\n ADN5020:REG[0x%x]=0x%x \r\n",0
000034  444e3530
000038  32303a52
00003c  45475b30
000040  7825785d
000044  3d307825
000048  78200d0a
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  imgo
                          DCD      init
                          DCD      0x00000000
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0xc
                          DCD      ||cap||
                          DCD      0x00000000
                          DCD      ||.conststring||+0x24
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0x28
                          DCD      rreg
                          DCD      0x00000001
                          DCD      ||.conststring||+0x40
                          DCD      ||.conststring||+0x44
                          DCD      ||.conststring||+0x48
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  696e6974          DCB      "init",0
000004  00      
000005  00                DCB      0
000006  00                DCB      0
000007  00                DCB      0
000008  00                DCB      0
000009  00                DCB      0
00000a  00                DCB      0
00000b  00                DCB      0
00000c  696e6974          DCB      "initialize ADNS5020 ",0
000010  69616c69
000014  7a652041
000018  444e5335
00001c  30323020
000020  00      
000021  00                DCB      0
000022  00                DCB      0
000023  00                DCB      0
000024  6300              DCB      "c",0
000026  00                DCB      0
000027  00                DCB      0
000028  63617074          DCB      "capture one frame   ",0
00002c  75726520
000030  6f6e6520
000034  6672616d
000038  65202020
00003c  00      
00003d  00                DCB      0
00003e  00                DCB      0
00003f  00                DCB      0
000040  726700            DCB      "rg",0
000043  00                DCB      0
000044  61647200          DCB      "adr",0
000048  72656164          DCB      "read register  ",0
00004c  20726567
000050  69737465
000054  72202000
