; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\usr_timer.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\usr_timer.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\cmsis -I..\main -I..\usr_lib -I..\ctt -I..\sensor -I..\free_rtos -I..\STM32F10x_StdPeriph -I..\STM32F10x_StdPeriph\inc -IC:\project\diy-project\stm32fxx\stm32_glcd_base\target\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\usr_timer.crf ..\usr_lib\usr_timer.c]
                          THUMB

                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM2_IRQHandler PROC
;;;65     
;;;66     void TIM2_IRQHandler(void)   //TIM2
000000  b510              PUSH     {r4,lr}
;;;67     {
;;;68     	if (TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET) 	{
000002  2101              MOVS     r1,#1
000004  078c              LSLS     r4,r1,#30
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       TIM_GetITStatus
00000c  2800              CMP      r0,#0
00000e  d00b              BEQ      |L1.40|
;;;69     		TIM_ClearITPendingBit(TIM2, TIM_IT_Update  );   
000010  2101              MOVS     r1,#1
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       TIM_ClearITPendingBit
;;;70     		LED0=!LED0;
000018  4805              LDR      r0,|L1.48|
00001a  f8d01198          LDR      r1,[r0,#0x198]
00001e  b121              CBZ      r1,|L1.42|
000020  f05f0100          MOVS.W   r1,#0
                  |L1.36|
000024  f8c01198          STR      r1,[r0,#0x198]
                  |L1.40|
;;;71     	}
;;;72     }
000028  bd10              POP      {r4,pc}
                  |L1.42|
00002a  2101              MOVS     r1,#1                 ;70
00002c  e7fa              B        |L1.36|
;;;73     
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      0x42210000

                          AREA ||i.TIM2_Int_Init||, CODE, READONLY, ALIGN=1

                  TIM2_Int_Init PROC
;;;41     
;;;42     void TIM2_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;43     {
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
;;;44       TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;45     	NVIC_InitTypeDef NVIC_InitStructure;
;;;46     
;;;47     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
000006  2101              MOVS     r1,#1
000008  4608              MOV      r0,r1
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;48     	
;;;49     	TIM_TimeBaseStructure.TIM_Period        = arr; 
00000e  f8ad5004          STRH     r5,[sp,#4]
;;;50     	TIM_TimeBaseStructure.TIM_Prescaler     = psc; 
000012  f8ad4000          STRH     r4,[sp,#0]
;;;51     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //DTS = Tck_tim
000016  2400              MOVS     r4,#0
;;;52     	TIM_TimeBaseStructure.TIM_CounterMode   = TIM_CounterMode_Up;  //TIM
;;;53     	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure); 
000018  f04f4580          MOV      r5,#0x40000000
00001c  f8ad4006          STRH     r4,[sp,#6]            ;51
000020  f8ad4002          STRH     r4,[sp,#2]            ;52
000024  4669              MOV      r1,sp
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       TIM_TimeBaseInit
;;;54      
;;;55     	TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE );
00002c  2201              MOVS     r2,#1
00002e  4611              MOV      r1,r2
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       TIM_ITConfig
;;;56     
;;;57     	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;            //TIM2 ==> TIM2_IRQ
000036  201c              MOVS     r0,#0x1c
000038  f88d000c          STRB     r0,[sp,#0xc]
;;;58     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  
00003c  f88d400d          STRB     r4,[sp,#0xd]
;;;59     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;         
000040  2003              MOVS     r0,#3
000042  f88d000e          STRB     r0,[sp,#0xe]
;;;60     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ
000046  2001              MOVS     r0,#1
000048  f88d000f          STRB     r0,[sp,#0xf]
;;;61     	NVIC_Init(&NVIC_InitStructure); 
00004c  a803              ADD      r0,sp,#0xc
00004e  f7fffffe          BL       NVIC_Init
;;;62     
;;;63     	TIM_Cmd(TIM2, ENABLE); 				 
000052  2101              MOVS     r1,#1
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       TIM_Cmd
;;;64     }
00005a  bd7f              POP      {r0-r6,pc}
;;;65     
                          ENDP


                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;32     
;;;33     void TIM3_IRQHandler(void)   //TIM3中断
000000  b510              PUSH     {r4,lr}
;;;34     {
;;;35     	if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET) 	{
000002  4c0b              LDR      r4,|L3.48|
000004  2101              MOVS     r1,#1
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       TIM_GetITStatus
00000c  2800              CMP      r0,#0
00000e  d00b              BEQ      |L3.40|
;;;36     		TIM_ClearITPendingBit(TIM3, TIM_IT_Update  );  
000010  2101              MOVS     r1,#1
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       TIM_ClearITPendingBit
;;;37     		LED1=!LED1;
000018  4806              LDR      r0,|L3.52|
00001a  f8d0119c          LDR      r1,[r0,#0x19c]
00001e  b121              CBZ      r1,|L3.42|
000020  f05f0100          MOVS.W   r1,#0
                  |L3.36|
000024  f8c0119c          STR      r1,[r0,#0x19c]
                  |L3.40|
;;;38     	}
;;;39     }
000028  bd10              POP      {r4,pc}
                  |L3.42|
00002a  2101              MOVS     r1,#1                 ;37
00002c  e7fa              B        |L3.36|
;;;40     
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      0x40000400
                  |L3.52|
                          DCD      0x42210000

                          AREA ||i.TIM3_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Int_Init PROC
;;;8      //  @param:  psc
;;;9      void TIM3_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;10     {
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
;;;11       TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;12     	NVIC_InitTypeDef NVIC_InitStructure;
;;;13     
;;;14     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //时钟使能
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;15     	
;;;16     	TIM_TimeBaseStructure.TIM_Period        = arr; // 设置在下一个更新事件装入活动的自动重装载寄存器周期的值	
00000e  f8ad5004          STRH     r5,[sp,#4]
;;;17     	TIM_TimeBaseStructure.TIM_Prescaler     = psc; // 设置用来作为TIMx时钟频率除数的预分频值
000012  f8ad4000          STRH     r4,[sp,#0]
;;;18     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim
000016  2400              MOVS     r4,#0
;;;19     	TIM_TimeBaseStructure.TIM_CounterMode   = TIM_CounterMode_Up;  //TIM向上计数模式
;;;20     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);  //根据指定的参数初始化TIMx的时间基数单位
000018  4d10              LDR      r5,|L4.92|
00001a  f8ad4006          STRH     r4,[sp,#6]            ;18
00001e  f8ad4002          STRH     r4,[sp,#2]            ;19
000022  4669              MOV      r1,sp
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       TIM_TimeBaseInit
;;;21      
;;;22     	TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE );        //使能指定的TIM3中断,允许更新中断
00002a  2201              MOVS     r2,#1
00002c  4611              MOV      r1,r2
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       TIM_ITConfig
;;;23     
;;;24     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;            //TIM3 ==> TIM3_IRQ
000034  201d              MOVS     r0,#0x1d
000036  f88d000c          STRB     r0,[sp,#0xc]
;;;25     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  //先占优先级0级
00003a  f88d400d          STRB     r4,[sp,#0xd]
;;;26     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;         //从优先级3级
00003e  2003              MOVS     r0,#3
000040  f88d000e          STRB     r0,[sp,#0xe]
;;;27     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ通道被使能
000044  2001              MOVS     r0,#1
000046  f88d000f          STRB     r0,[sp,#0xf]
;;;28     	NVIC_Init(&NVIC_InitStructure);  //初始化NVIC寄存器
00004a  a803              ADD      r0,sp,#0xc
00004c  f7fffffe          BL       NVIC_Init
;;;29     
;;;30     	TIM_Cmd(TIM3, ENABLE);
000050  2101              MOVS     r1,#1
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       TIM_Cmd
;;;31     }
000058  bd7f              POP      {r0-r6,pc}
;;;32     
                          ENDP

00005a  0000              DCW      0x0000
                  |L4.92|
                          DCD      0x40000400

                          AREA ||i.TIM3_PWM_Init||, CODE, READONLY, ALIGN=2

                  TIM3_PWM_Init PROC
;;;75     
;;;76     void TIM3_PWM_Init(u16 arr,u16 psc)
000000  b530              PUSH     {r4,r5,lr}
;;;77     {  
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
000006  b089              SUB      sp,sp,#0x24
;;;78     	GPIO_InitTypeDef GPIO_InitStructure;
;;;79     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;80     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;81     	
;;;82     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);	
000008  2101              MOVS     r1,#1
00000a  2002              MOVS     r0,#2
00000c  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;83      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB  | RCC_APB2Periph_AFIO, ENABLE); 
000010  2101              MOVS     r1,#1
000012  2009              MOVS     r0,#9
000014  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;84     	
;;;85     	GPIO_PinRemapConfig(GPIO_PartialRemap_TIM3, ENABLE); //Timer3  TIM3_CH2->PB5    
000018  2101              MOVS     r1,#1
00001a  481a              LDR      r0,|L5.132|
00001c  f7fffffe          BL       GPIO_PinRemapConfig
;;;86      
;;;87     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;        //TIM_CH2
000020  2020              MOVS     r0,#0x20
000022  f8ad001c          STRH     r0,[sp,#0x1c]
;;;88     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  
000026  2018              MOVS     r0,#0x18
000028  f88d001f          STRB     r0,[sp,#0x1f]
;;;89     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002c  2003              MOVS     r0,#3
00002e  f88d001e          STRB     r0,[sp,#0x1e]
;;;90     	GPIO_Init(GPIOB, &GPIO_InitStructure);//GPIO
000032  a907              ADD      r1,sp,#0x1c
000034  4814              LDR      r0,|L5.136|
000036  f7fffffe          BL       GPIO_Init
;;;91      
;;;92     	TIM_TimeBaseStructure.TIM_Period = arr; 
00003a  f8ad5004          STRH     r5,[sp,#4]
;;;93     	TIM_TimeBaseStructure.TIM_Prescaler =psc;
00003e  f8ad4000          STRH     r4,[sp,#0]
;;;94     	TIM_TimeBaseStructure.TIM_ClockDivision = 0; 
000042  2400              MOVS     r4,#0
;;;95     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
;;;96     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); 
000044  4d11              LDR      r5,|L5.140|
000046  f8ad4006          STRH     r4,[sp,#6]            ;94
00004a  f8ad4002          STRH     r4,[sp,#2]            ;95
00004e  4669              MOV      r1,sp
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       TIM_TimeBaseInit
;;;97     	
;;;98     	//TIM3 Channel2 PWM??	 
;;;99     	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM2; 
000056  2070              MOVS     r0,#0x70
000058  f8ad000c          STRH     r0,[sp,#0xc]
;;;100    	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable; 
00005c  2001              MOVS     r0,#1
00005e  f8ad000e          STRH     r0,[sp,#0xe]
;;;101    	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; 
000062  f8ad4014          STRH     r4,[sp,#0x14]
;;;102    	TIM_OC2Init(TIM3, &TIM_OCInitStructure); 
000066  a903              ADD      r1,sp,#0xc
000068  4628              MOV      r0,r5
00006a  f7fffffe          BL       TIM_OC2Init
;;;103    
;;;104    	TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);  //
00006e  2108              MOVS     r1,#8
000070  4628              MOV      r0,r5
000072  f7fffffe          BL       TIM_OC2PreloadConfig
;;;105     
;;;106    	TIM_Cmd(TIM3, ENABLE);  //TIM3
000076  2101              MOVS     r1,#1
000078  4628              MOV      r0,r5
00007a  f7fffffe          BL       TIM_Cmd
;;;107    }
00007e  b009              ADD      sp,sp,#0x24
000080  bd30              POP      {r4,r5,pc}
                          ENDP

000082  0000              DCW      0x0000
                  |L5.132|
                          DCD      0x001a0800
                  |L5.136|
                          DCD      0x40010c00
                  |L5.140|
                          DCD      0x40000400
