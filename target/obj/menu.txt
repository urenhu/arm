; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\menu.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\menu.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\cmsis -I..\main -I..\usr_lib -I..\ctt -I..\sensor -I..\free_rtos -I..\STM32F10x_StdPeriph -I..\STM32F10x_StdPeriph\inc -IC:\project\diy-project\stm32fxx\stm32_glcd_base\target\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\menu.crf ..\ctt\menu.c]
                          THUMB

                          AREA ||i.CmdExec||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  CmdExec PROC
;;;152    ****************************************************************************/
;;;153    int CmdExec( char *prompt, int level, const CMD_ENTRY menu[], int argc, char *argv[] )
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;154    {
;;;155       const CMD_ENTRY *cmdP;
;;;156       int rc;
;;;157    
;;;158       if( !(argc && argv[0] && *argv[0]) )  {
000004  9c08              LDR      r4,[sp,#0x20]
000006  4615              MOV      r5,r2                 ;154
000008  460f              MOV      r7,r1                 ;154
00000a  4680              MOV      r8,r0                 ;154
00000c  2b00              CMP      r3,#0
00000e  d04f              BEQ      |L1.176|
000010  6820              LDR      r0,[r4,#0]
000012  2800              CMP      r0,#0
000014  d04c              BEQ      |L1.176|
000016  7801              LDRB     r1,[r0,#0]
000018  2900              CMP      r1,#0
00001a  d049              BEQ      |L1.176|
00001c  1e5e              SUBS     r6,r3,#1
;;;159          return( MENU_CONTINUE );
;;;160       }
;;;161       argc--;
;;;162       if( CmdMatch(argv[0], CMD_HELP1) || CmdMatch(argv[0], CMD_HELP2) )   {
00001e  a12a              ADR      r1,|L1.200|
000020  f7fffffe          BL       strcmp
000024  b158              CBZ      r0,|L1.62|
000026  a129              ADR      r1,|L1.204|
000028  6820              LDR      r0,[r4,#0]
00002a  f7fffffe          BL       strcmp
00002e  b130              CBZ      r0,|L1.62|
;;;163    		  DisplayMenu( prompt, level, menu );
;;;164       }   else if( CmdMatch(argv[0], CMD_QUIT) )  {
000030  a128              ADR      r1,|L1.212|
000032  6820              LDR      r0,[r4,#0]
000034  f7fffffe          BL       strcmp
000038  b138              CBZ      r0,|L1.74|
;;;165           return( MENU_QUIT );
;;;166       }  else if( (cmdP = CmdFind(menu, argv[0]))== NULL )  {
00003a  6827              LDR      r7,[r4,#0]
00003c  e00d              B        |L1.90|
                  |L1.62|
00003e  462a              MOV      r2,r5                 ;163
000040  4639              MOV      r1,r7                 ;163
000042  4640              MOV      r0,r8                 ;163
000044  f7fffffe          BL       DisplayMenu
000048  e032              B        |L1.176|
                  |L1.74|
00004a  2001              MOVS     r0,#1                 ;165
                  |L1.76|
;;;167          DisplayCmdUnknown( prompt, argv[0] );
;;;168       }   else if( cmdP->argc == CMD_ARGC_VAR ) {
;;;169          /* Variable argument command, e.g. sub-menu */
;;;170          (* (FUNC_VARGS)cmdP->func)( argc, &argv[1] );
;;;171       }   else if( cmdP->argc != argc )  {
;;;172          DisplaySyntax( prompt, cmdP );
;;;173       }   else if( !cmdP->func )  {
;;;174          /* Sanity check for an invalid function associated with a command */
;;;175          DisplayFuncError( prompt, cmdP );
;;;176       }  else   {
;;;177          /* Normal command with fixed number of parameters. */
;;;178          rc = (* (FUNC_5ARGS)cmdP->func)(argv[1], argv[2], argv[3], argv[4], argv[5]);
;;;179          if( rc == CMD_RC_SYNTAX_ERROR )     {
;;;180             DisplaySyntax( prompt, cmdP );
;;;181          }     else if( cmdTrace && rc )     {
;;;182             conPrintf("%s Error executing '%s' (%d)\r\n", prompt, cmdP->str, rc );
;;;183          }
;;;184       }
;;;185       return( MENU_CONTINUE );
;;;186    }
00004c  e8bd83f8          POP      {r3-r9,pc}
                  |L1.80|
000050  4639              MOV      r1,r7
000052  f7fffffe          BL       strcmp
000056  b120              CBZ      r0,|L1.98|
000058  3514              ADDS     r5,r5,#0x14
                  |L1.90|
00005a  68a8              LDR      r0,[r5,#8]
00005c  2800              CMP      r0,#0
00005e  d1f7              BNE      |L1.80|
000060  e009              B        |L1.118|
                  |L1.98|
000062  68aa              LDR      r2,[r5,#8]
000064  b13a              CBZ      r2,|L1.118|
000066  b135              CBZ      r5,|L1.118|
000068  6868              LDR      r0,[r5,#4]            ;168
00006a  1c41              ADDS     r1,r0,#1              ;168
00006c  d007              BEQ      |L1.126|
00006e  42b0              CMP      r0,r6                 ;171
000070  d00a              BEQ      |L1.136|
000072  68eb              LDR      r3,[r5,#0xc]          ;172
000074  e025              B        |L1.194|
                  |L1.118|
000076  4641              MOV      r1,r8                 ;167
000078  a018              ADR      r0,|L1.220|
00007a  6822              LDR      r2,[r4,#0]            ;167
00007c  e01c              B        |L1.184|
                  |L1.126|
00007e  682a              LDR      r2,[r5,#0]            ;170
000080  1d21              ADDS     r1,r4,#4              ;170
000082  4630              MOV      r0,r6                 ;170
000084  4790              BLX      r2                    ;170
000086  e013              B        |L1.176|
                  |L1.136|
000088  682e              LDR      r6,[r5,#0]            ;173
00008a  b19e              CBZ      r6,|L1.180|
00008c  6960              LDR      r0,[r4,#0x14]         ;178
00008e  1d24              ADDS     r4,r4,#4              ;178
000090  9000              STR      r0,[sp,#0]            ;178
000092  e894000f          LDM      r4,{r0-r3}            ;178
000096  47b0              BLX      r6                    ;178
000098  4603              MOV      r3,r0                 ;178
00009a  2801              CMP      r0,#1                 ;179
00009c  d00f              BEQ      |L1.190|
00009e  4816              LDR      r0,|L1.248|
0000a0  6800              LDR      r0,[r0,#0]            ;181  ; cmdTrace
0000a2  b128              CBZ      r0,|L1.176|
0000a4  b123              CBZ      r3,|L1.176|
0000a6  4641              MOV      r1,r8                 ;182
0000a8  a014              ADR      r0,|L1.252|
0000aa  68aa              LDR      r2,[r5,#8]            ;182
                  |L1.172|
0000ac  f7fffffe          BL       __2printf
                  |L1.176|
0000b0  2000              MOVS     r0,#0                 ;185
0000b2  e7cb              B        |L1.76|
                  |L1.180|
0000b4  4641              MOV      r1,r8                 ;175
0000b6  a019              ADR      r0,|L1.284|
                  |L1.184|
0000b8  f7fffffe          BL       __2printf
0000bc  e7f8              B        |L1.176|
                  |L1.190|
0000be  e9d52302          LDRD     r2,r3,[r5,#8]         ;175
                  |L1.194|
0000c2  4641              MOV      r1,r8                 ;172
0000c4  a01e              ADR      r0,|L1.320|
0000c6  e7f1              B        |L1.172|
;;;187    
                          ENDP

                  |L1.200|
0000c8  3f00              DCB      "?",0
0000ca  00                DCB      0
0000cb  00                DCB      0
                  |L1.204|
0000cc  68656c70          DCB      "help",0
0000d0  00      
0000d1  00                DCB      0
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L1.212|
0000d4  71756974          DCB      "quit",0
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0
                  |L1.220|
0000dc  25732075          DCB      "%s unknown command: '%s'\r\n",0
0000e0  6e6b6e6f
0000e4  776e2063
0000e8  6f6d6d61
0000ec  6e643a20
0000f0  27257327
0000f4  0d0a00  
0000f7  00                DCB      0
                  |L1.248|
                          DCD      ||.data||
                  |L1.252|
0000fc  25732045          DCB      "%s Error executing '%s' (%d)\r\n",0
000100  72726f72
000104  20657865
000108  63757469
00010c  6e672027
000110  25732720
000114  28256429
000118  0d0a00  
00011b  00                DCB      0
                  |L1.284|
00011c  25732063          DCB      "%s command '%s' function missing\r\n",0
000120  6f6d6d61
000124  6e642027
000128  25732720
00012c  66756e63
000130  74696f6e
000134  206d6973
000138  73696e67
00013c  0d0a00  
00013f  00                DCB      0
                  |L1.320|
000140  25732073          DCB      "%s syntax: '%s %s'\r\n",0
000144  796e7461
000148  783a2027
00014c  25732025
000150  73270d0a
000154  00      
000155  00                DCB      0
000156  00                DCB      0
000157  00                DCB      0

                          AREA ||i.CmdLoop||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  CmdLoop PROC
;;;207    ****************************************************************************/
;;;208    void CmdLoop( char *prompt, int level, const CMD_ENTRY menu[] )
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;209    {
000004  4617              MOV      r7,r2
000006  4688              MOV      r8,r1
000008  4606              MOV      r6,r0
;;;210       int argc;
;;;211       static char *argv[TOKEN_MAX_CNT];
;;;212       static char cmdLine[128];
;;;213       static char p[128];
;;;214    
;;;215       sprintf( p, "\r\n" PROMPT_FORMAT, prompt );
00000a  4602              MOV      r2,r0
00000c  a117              ADR      r1,|L2.108|
00000e  481a              LDR      r0,|L2.120|
000010  f7fffffe          BL       __2sprintf
                  |L2.20|
;;;216    
;;;217       while ( 1 )   {
;;;218          conPrompt( p );
000014  4919              LDR      r1,|L2.124|
000016  4818              LDR      r0,|L2.120|
000018  f7fffffe          BL       fputs
00001c  4817              LDR      r0,|L2.124|
00001e  f7fffffe          BL       fflush
;;;219          conGets( cmdLine, sizeof(cmdLine) );
000022  4815              LDR      r0,|L2.120|
000024  2180              MOVS     r1,#0x80
000026  3880              SUBS     r0,r0,#0x80
000028  f7fffffe          BL       conGets
;;;220          if ((argc = CmdParse( cmdLine, argv )) > 0)      {
00002c  4812              LDR      r0,|L2.120|
00002e  a114              ADR      r1,|L2.128|
000030  3880              SUBS     r0,r0,#0x80
000032  f1a00528          SUB      r5,r0,#0x28
000036  2400              MOVS     r4,#0
000038  e005              B        |L2.70|
00003a  bf00              NOP      
                  |L2.60|
00003c  f8450024          STR      r0,[r5,r4,LSL #2]
000040  a10f              ADR      r1,|L2.128|
000042  2000              MOVS     r0,#0
000044  1c64              ADDS     r4,r4,#1
                  |L2.70|
000046  f7fffffe          BL       strtok
00004a  b108              CBZ      r0,|L2.80|
00004c  2c0a              CMP      r4,#0xa
00004e  dbf5              BLT      |L2.60|
                  |L2.80|
000050  1e23              SUBS     r3,r4,#0
000052  dddf              BLE      |L2.20|
;;;221             if ((CmdExec( prompt, level, menu, argc, argv )) == MENU_QUIT)  {
000054  4808              LDR      r0,|L2.120|
000056  463a              MOV      r2,r7
000058  38a8              SUBS     r0,r0,#0xa8
00005a  9000              STR      r0,[sp,#0]
00005c  4641              MOV      r1,r8
00005e  4630              MOV      r0,r6
000060  f7fffffe          BL       CmdExec
000064  2801              CMP      r0,#1
000066  d1d5              BNE      |L2.20|
;;;222               return;
;;;223             }
;;;224          }
;;;225       }
;;;226    }
000068  e8bd83f8          POP      {r3-r9,pc}
;;;227    
                          ENDP

                  |L2.108|
00006c  0d0a5b25          DCB      "\r\n[%s]> ",0
000070  735d3e20
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L2.120|
                          DCD      ||.bss||+0xa8
                  |L2.124|
                          DCD      __stdout
                  |L2.128|
000080  202c090d          DCB      " ,\t\r\n",0
000084  0a00    
000086  00                DCB      0
000087  00                DCB      0

                          AREA ||i.DisplayCmd||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  DisplayCmd PROC
;;;248    ****************************************************************************/
;;;249    void DisplayCmd( char *cmd, char *syntax, char *hint )
000000  b570              PUSH     {r4-r6,lr}
;;;250    {
000002  4615              MOV      r5,r2
;;;251       int len;
;;;252    
;;;253       if ( *syntax == '\0' )   {
000004  780a              LDRB     r2,[r1,#0]
000006  b132              CBZ      r2,|L3.22|
;;;254          len = conPrintf( "%s ", cmd );
;;;255       }   else   {
;;;256          len = conPrintf( "%s %s ", cmd, syntax );
000008  460a              MOV      r2,r1
00000a  4601              MOV      r1,r0
00000c  a00c              ADR      r0,|L3.64|
00000e  f7fffffe          BL       __2printf
                  |L3.18|
000012  4604              MOV      r4,r0                 ;254
000014  e009              B        |L3.42|
                  |L3.22|
000016  4601              MOV      r1,r0                 ;254
000018  a00b              ADR      r0,|L3.72|
00001a  f7fffffe          BL       __2printf
00001e  e7f8              B        |L3.18|
                  |L3.32|
;;;257       }
;;;258       for ( ; len < COL_HINT; len++ )   {
;;;259          conPutc( '.' );
000020  490a              LDR      r1,|L3.76|
000022  202e              MOVS     r0,#0x2e
000024  f7fffffe          BL       putc
000028  1c64              ADDS     r4,r4,#1
                  |L3.42|
00002a  2c28              CMP      r4,#0x28              ;258
00002c  dbf8              BLT      |L3.32|
;;;260       }
;;;261       conFlushOut();
00002e  4807              LDR      r0,|L3.76|
000030  f7fffffe          BL       fflush
;;;262       conPrintf( " %s\r\n", hint );
000034  4629              MOV      r1,r5
000036  e8bd4070          POP      {r4-r6,lr}
00003a  a005              ADR      r0,|L3.80|
00003c  f7ffbffe          B.W      __2printf
;;;263    }
;;;264    
                          ENDP

                  |L3.64|
000040  25732025          DCB      "%s %s ",0
000044  732000  
000047  00                DCB      0
                  |L3.72|
000048  25732000          DCB      "%s ",0
                  |L3.76|
                          DCD      __stdout
                  |L3.80|
000050  2025730d          DCB      " %s\r\n",0
000054  0a00    
000056  00                DCB      0
000057  00                DCB      0

                          AREA ||i.DisplayMenu||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  DisplayMenu PROC
;;;268    ****************************************************************************/
;;;269    void DisplayMenu( char *prompt, int level, const CMD_ENTRY menu[] )
000000  b570              PUSH     {r4-r6,lr}
;;;270    {
000002  4605              MOV      r5,r0
000004  4614              MOV      r4,r2
;;;271       int len;
;;;272    
;;;273       conPutc( '\r' );
000006  491e              LDR      r1,|L4.128|
000008  200d              MOVS     r0,#0xd
00000a  f7fffffe          BL       putc
;;;274       conPutc( '\n' );
00000e  491c              LDR      r1,|L4.128|
000010  200a              MOVS     r0,#0xa
000012  f7fffffe          BL       putc
;;;275       len = conPrintf( "%s Console Commands\r\n", prompt ) - 1;
000016  4629              MOV      r1,r5
000018  a01a              ADR      r0,|L4.132|
00001a  f7fffffe          BL       __2printf
00001e  1e45              SUBS     r5,r0,#1
;;;276       while ( len-- )   {
000020  e002              B        |L4.40|
                  |L4.34|
;;;277          conPutc( '-' );
000022  202d              MOVS     r0,#0x2d
000024  f7fffffe          BL       putc
                  |L4.40|
;;;278       }
;;;279       conPutc( '\r' );
000028  4915              LDR      r1,|L4.128|
00002a  1e6d              SUBS     r5,r5,#1              ;277
00002c  d2f9              BCS      |L4.34|
00002e  200d              MOVS     r0,#0xd
000030  f7fffffe          BL       putc
;;;280       conPutc( '\n' );
000034  4912              LDR      r1,|L4.128|
000036  200a              MOVS     r0,#0xa
000038  f7fffffe          BL       putc
;;;281       DisplayCmd( CMD_HELP1, CMD_HELP_SYNTAX, CMD_HELP_HINT );
00003c  a217              ADR      r2,|L4.156|
00003e  a11c              ADR      r1,|L4.176|
000040  a01c              ADR      r0,|L4.180|
000042  f7fffffe          BL       DisplayCmd
;;;282       DisplayCmd( CMD_HELP2, CMD_HELP_SYNTAX, CMD_HELP_HINT );
000046  a215              ADR      r2,|L4.156|
000048  a119              ADR      r1,|L4.176|
00004a  a01b              ADR      r0,|L4.184|
00004c  f7fffffe          BL       DisplayCmd
;;;283       DisplayCmd( CMD_QUIT, CMD_QUIT_SYNTAX, CMD_QUIT_HINT );
000050  a21b              ADR      r2,|L4.192|
000052  a117              ADR      r1,|L4.176|
000054  a01e              ADR      r0,|L4.208|
000056  f7fffffe          BL       DisplayCmd
;;;284    
;;;285       for ( ; menu->str; menu++ ){
00005a  e004              B        |L4.102|
                  |L4.92|
00005c  e9d41203          LDRD     r1,r2,[r4,#0xc]
;;;286          DisplayCmd(menu->str, menu->syntax, menu->hint);
000060  f7fffffe          BL       DisplayCmd
000064  3414              ADDS     r4,r4,#0x14
                  |L4.102|
000066  68a0              LDR      r0,[r4,#8]            ;285
000068  2800              CMP      r0,#0                 ;285
00006a  d1f7              BNE      |L4.92|
;;;287       }
;;;288       conPutc( '\r' );
00006c  4904              LDR      r1,|L4.128|
00006e  200d              MOVS     r0,#0xd
000070  f7fffffe          BL       putc
;;;289       conPutc( '\n' );
000074  e8bd4070          POP      {r4-r6,lr}
000078  4901              LDR      r1,|L4.128|
00007a  200a              MOVS     r0,#0xa
00007c  f7ffbffe          B.W      putc
;;;290    }
                          ENDP

                  |L4.128|
                          DCD      __stdout
                  |L4.132|
000084  25732043          DCB      "%s Console Commands\r\n",0
000088  6f6e736f
00008c  6c652043
000090  6f6d6d61
000094  6e64730d
000098  0a00    
00009a  00                DCB      0
00009b  00                DCB      0
                  |L4.156|
00009c  4c697374          DCB      "List menu commands",0
0000a0  206d656e
0000a4  7520636f
0000a8  6d6d616e
0000ac  647300  
0000af  00                DCB      0
                  |L4.176|
0000b0  00                DCB      0
0000b1  00                DCB      0
0000b2  00                DCB      0
0000b3  00                DCB      0
                  |L4.180|
0000b4  3f00              DCB      "?",0
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L4.184|
0000b8  68656c70          DCB      "help",0
0000bc  00      
0000bd  00                DCB      0
0000be  00                DCB      0
0000bf  00                DCB      0
                  |L4.192|
0000c0  45786974          DCB      "Exit this menu",0
0000c4  20746869
0000c8  73206d65
0000cc  6e7500  
0000cf  00                DCB      0
                  |L4.208|
0000d0  71756974          DCB      "quit",0
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0

                          AREA ||i.MenuMain||, CODE, READONLY, ALIGN=1

                  MenuMain PROC
;;;126    ****************************************************************************/
;;;127    void MenuMain( char *prompt, const CMD_ENTRY menu[] )
000000  460c              MOV      r4,r1
;;;128    {
000002  4605              MOV      r5,r0
                  |L5.4|
;;;129      for (;;) 
;;;130    		CmdLoop( prompt, LVL_MAIN_MENU, menu );
000004  4622              MOV      r2,r4
000006  2100              MOVS     r1,#0
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       CmdLoop
00000e  e7f9              B        |L5.4|
;;;131    	 
;;;132    }
;;;133    
                          ENDP


                          AREA ||i.MenuStart||, CODE, READONLY, ALIGN=1

                  MenuStart PROC
;;;137    ****************************************************************************/
;;;138    void MenuStart( char *prompt, const CMD_ENTRY menu[], int argc, char *argv[] )
000000  b508              PUSH     {r3,lr}
;;;139    {
;;;140       if( argc > 0 ) {
000002  2a00              CMP      r2,#0
000004  dd06              BLE      |L6.20|
;;;141          CmdExec( prompt, LVL_SUB_MENU, menu, argc, argv );
000006  9300              STR      r3,[sp,#0]
000008  4613              MOV      r3,r2
00000a  460a              MOV      r2,r1
00000c  2101              MOVS     r1,#1
00000e  f7fffffe          BL       CmdExec
;;;142       }   else   {
;;;143          CmdLoop( prompt, LVL_SUB_MENU, menu );
;;;144       }
;;;145    }
000012  bd08              POP      {r3,pc}
                  |L6.20|
000014  460a              MOV      r2,r1                 ;143
000016  e8bd4008          POP      {r3,lr}               ;143
00001a  2101              MOVS     r1,#1                 ;143
00001c  f7ffbffe          B.W      CmdLoop
;;;146    
                          ENDP


                          AREA ||i.conGets||, CODE, READONLY, ALIGN=2

                  conGets PROC
;;;96     ****************************************************************************/
;;;97     void conGets( char *buf, int lim )
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;98     {
000004  4607              MOV      r7,r0
000006  f04f0800          MOV      r8,#0
;;;99        char ch;
;;;100       int  i;
;;;101    	
;;;102    	 if (lim > 126)
00000a  297e              CMP      r1,#0x7e
00000c  dd02              BLE      |L7.20|
;;;103    		 lim = 126;
00000e  217e              MOVS     r1,#0x7e
;;;104    	 
;;;105    	 for(i = 0; i < lim - 1 ; i++ ){
000010  2000              MOVS     r0,#0
000012  e001              B        |L7.24|
                  |L7.20|
000014  2000              MOVS     r0,#0
000016  e002              B        |L7.30|
                  |L7.24|
;;;106    		  buf[i] = 0; 
000018  f8078000          STRB     r8,[r7,r0]
00001c  1c40              ADDS     r0,r0,#1
                  |L7.30|
00001e  1e4e              SUBS     r6,r1,#1              ;105
000020  42b0              CMP      r0,r6                 ;105
000022  dbf9              BLT      |L7.24|
;;;107    	 }
;;;108    	   
;;;109       for(i = 0; i < lim - 1 && (ch = (char)conGetc()&0xff) != EOF && ch != '\n' && ch != '\r'; ++i) {
000024  2400              MOVS     r4,#0
000026  e008              B        |L7.58|
                  |L7.40|
;;;110           buf[i] = ch;
000028  553d              STRB     r5,[r7,r4]
;;;111    		   EchoChar( ch ) 
00002a  4911              LDR      r1,|L7.112|
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       putc
000032  480f              LDR      r0,|L7.112|
000034  f7fffffe          BL       fflush
000038  1c64              ADDS     r4,r4,#1
                  |L7.58|
00003a  42b4              CMP      r4,r6                 ;109
00003c  da09              BGE      |L7.82|
00003e  f7fffffe          BL       usart_hitkey
000042  b2c5              UXTB     r5,r0                 ;109
000044  1c68              ADDS     r0,r5,#1              ;109
000046  d00e              BEQ      |L7.102|
000048  2d0a              CMP      r5,#0xa               ;109
00004a  d006              BEQ      |L7.90|
00004c  2d0d              CMP      r5,#0xd               ;109
00004e  d1eb              BNE      |L7.40|
000050  e003              B        |L7.90|
                  |L7.82|
;;;112    	 }
;;;113       if(ch == '\n' || ch == '\r'){
000052  2d0a              CMP      r5,#0xa
000054  d001              BEQ      |L7.90|
000056  2d0d              CMP      r5,#0xd
000058  d105              BNE      |L7.102|
                  |L7.90|
;;;114           buf[i] = '\r';
00005a  200d              MOVS     r0,#0xd
00005c  5538              STRB     r0,[r7,r4]
;;;115           ++i;     
;;;116           buf[i] = '\n';
00005e  1c64              ADDS     r4,r4,#1
000060  200a              MOVS     r0,#0xa
000062  5538              STRB     r0,[r7,r4]
000064  1c64              ADDS     r4,r4,#1
                  |L7.102|
;;;117           ++i;     
;;;118       }
;;;119       buf[i] = 0;
000066  f8078004          STRB     r8,[r7,r4]
;;;120       // return i;
;;;121    }
00006a  e8bd81f0          POP      {r4-r8,pc}
;;;122    	
                          ENDP

00006e  0000              DCW      0x0000
                  |L7.112|
                          DCD      __stdout

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  argv
                          %        40
                  cmdLine
                          %        128
                  p
                          %        128

                          AREA ||.data||, DATA, ALIGN=2

                  cmdTrace
                          DCD      0x00000000
