; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\usr_delay.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\usr_delay.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\cmsis -I..\main -I..\usr_lib -I..\ctt -I..\sensor -I..\free_rtos -I..\STM32F10x_StdPeriph -I..\STM32F10x_StdPeriph\inc -IC:\project\diy-project\stm32fxx\stm32_glcd_base\target\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=517 -D_RTE_ -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\usr_delay.crf ..\usr_lib\usr_delay.c]
                          THUMB

                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;24     
;;;25     void delay_init()	 
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27     #ifdef OS_CRITICAL_METHOD 	
;;;28     	u32 reload;
;;;29     #endif
;;;30     
;;;31     	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);	//selecting external clock : HCLK/8
000002  f06f0004          MVN      r0,#4
000006  f7fffffe          BL       SysTick_CLKSourceConfig
;;;32     	fac_us = SystemCoreClock/8000000;	//为系统时钟的1/8  
00000a  4809              LDR      r0,|L1.48|
00000c  4909              LDR      r1,|L1.52|
00000e  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000010  fbb0f0f1          UDIV     r0,r0,r1
000014  b2c1              UXTB     r1,r0
000016  4808              LDR      r0,|L1.56|
;;;33     	 
;;;34     #ifdef OS_CRITICAL_METHOD 	//如果OS_CRITICAL_METHOD定义了,说明使用ucosII了.
;;;35     	reload=SystemCoreClock/8000000;		//每秒钟的计数次数 单位为K	   
;;;36     	reload*=1000000/OS_TICKS_PER_SEC;//根据OS_TICKS_PER_SEC设定溢出时间
;;;37     							//reload为24位寄存器,最大值:16777216,在72M下,约合1.86s左右	
;;;38     	fac_ms=1000/OS_TICKS_PER_SEC;//代表ucos可以延时的最少单位	   
;;;39     	SysTick->CTRL|=SysTick_CTRL_TICKINT_Msk;   	//开启SYSTICK中断
;;;40     	SysTick->LOAD=reload; 	//每1/OS_TICKS_PER_SEC秒中断一次	
;;;41     	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk;   	//开启SYSTICK    
;;;42     #else
;;;43     	fac_ms=(u16)fac_us*1000;  
000018  eb010241          ADD      r2,r1,r1,LSL #1
00001c  7001              STRB     r1,[r0,#0]            ;32
00001e  ebc211c1          RSB      r1,r2,r1,LSL #7
000022  f64f72ff          MOV      r2,#0xffff
000026  ea0201c1          AND      r1,r2,r1,LSL #3
00002a  8041              STRH     r1,[r0,#2]
;;;44     #endif
;;;45     }								    
00002c  bd10              POP      {r4,pc}
;;;46     
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      SystemCoreClock
                  |L1.52|
                          DCD      0x007a1200
                  |L1.56|
                          DCD      ||.data||

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;100    
;;;101    void delay_ms(u16 nms)
000000  490b              LDR      r1,|L2.48|
;;;102    {	 		  	  
;;;103    	u32 temp;		   
;;;104    	SysTick->LOAD=(u32)nms*fac_ms;//时间加载(SysTick->LOAD为24bit)
000002  8849              LDRH     r1,[r1,#2]  ; fac_ms
000004  4348              MULS     r0,r1,r0
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  6148              STR      r0,[r1,#0x14]
;;;105    	SysTick->VAL =0x00;           //清空计数器
00000c  2200              MOVS     r2,#0
00000e  618a              STR      r2,[r1,#0x18]
;;;106    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;          //开始倒数  
000010  6908              LDR      r0,[r1,#0x10]
000012  f0400001          ORR      r0,r0,#1
000016  6108              STR      r0,[r1,#0x10]
                  |L2.24|
;;;107    	do
;;;108    	{
;;;109    		temp=SysTick->CTRL;
000018  6908              LDR      r0,[r1,#0x10]
;;;110    	}
;;;111    	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00001a  07c3              LSLS     r3,r0,#31
00001c  d001              BEQ      |L2.34|
00001e  03c0              LSLS     r0,r0,#15
000020  d5fa              BPL      |L2.24|
                  |L2.34|
;;;112    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;       //关闭计数器
000022  6908              LDR      r0,[r1,#0x10]
000024  f0200001          BIC      r0,r0,#1
000028  6108              STR      r0,[r1,#0x10]
;;;113    	SysTick->VAL =0X00;       //清空计数器	  	    
00002a  618a              STR      r2,[r1,#0x18]
;;;114    } 
00002c  4770              BX       lr
;;;115    #endif
                          ENDP

00002e  0000              DCW      0x0000
                  |L2.48|
                          DCD      ||.data||

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;83     
;;;84     void delay_us(u32 nus)
000000  490b              LDR      r1,|L3.48|
;;;85     {		
;;;86     	u32 temp;	    	 
;;;87     	
;;;88     	SysTick->LOAD  = nus*fac_us;    		 
000002  7809              LDRB     r1,[r1,#0]  ; fac_us
000004  4348              MULS     r0,r1,r0
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  6148              STR      r0,[r1,#0x14]
;;;89     	SysTick->VAL   = 0x00;        
00000c  2200              MOVS     r2,#0
00000e  618a              STR      r2,[r1,#0x18]
;;;90     	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk ;	 
000010  6908              LDR      r0,[r1,#0x10]
000012  f0400001          ORR      r0,r0,#1
000016  6108              STR      r0,[r1,#0x10]
                  |L3.24|
;;;91     	
;;;92     	do {
;;;93     		temp=SysTick->CTRL;
000018  6908              LDR      r0,[r1,#0x10]
;;;94     	} while(temp&0x01&&!(temp&(1<<16)));
00001a  07c3              LSLS     r3,r0,#31
00001c  d001              BEQ      |L3.34|
00001e  03c0              LSLS     r0,r0,#15
000020  d5fa              BPL      |L3.24|
                  |L3.34|
;;;95     	
;;;96     	SysTick->CTRL  &= ~SysTick_CTRL_ENABLE_Msk; 
000022  6908              LDR      r0,[r1,#0x10]
000024  f0200001          BIC      r0,r0,#1
000028  6108              STR      r0,[r1,#0x10]
;;;97     	SysTick->VAL    = 0X00;         
00002a  618a              STR      r2,[r1,#0x18]
;;;98     }
00002c  4770              BX       lr
;;;99     
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
